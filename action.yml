name: 'Semantic Version Bumper'
description: 'Gets the last tag, bumps version, creates a new tag and release'

inputs:
  github_token:
    description: 'GitHub token for creating releases'
    required: true
  skip_push:
    description: 'Skips new tag creation and pushing if true. Default is false'
    required: false
    default: false

outputs:
  new_version:
    value: '${{ steps.versioning.outputs.new_version }}'
    description: 'New version'
  new_version_raw:
    description: 'New version without prefix (for branches it is just the last number)'
    value: '${{ steps.versioning.outputs.new_version_raw }}'
  prefix:
    description: 'Prefix'
    value: '${{ steps.versioning.outputs.prefix }}'

runs:
  using: 'composite'
  steps:
    - name: Detect version strategy
      id: detect_strategy
      shell: bash
      run: |
        if [ "${{ github.event_name }}" == "pull_request" ]; then
          MSG="${{ github.event.pull_request.title }}"
        else
          MSG=$(git log -1 --pretty=%B)
        fi

        if [[ "$MSG" == *"#major"* ]]; then
          echo "strategy=major" >> $GITHUB_OUTPUT
        elif [[ "$MSG" == *"#minor"* ]]; then
          echo "strategy=minor" >> $GITHUB_OUTPUT
        elif [[ "$MSG" == *"#patch"* ]]; then
          echo "strategy=patch" >> $GITHUB_OUTPUT
        fi

    - name: Get last tag
      id: get_tag
      shell: bash
      run: |
        LATEST_MAIN_TAG=$(git for-each-ref --sort=-version:refname --format '%(refname:short)' refs/tags/v[0-9]*.[0-9]*.[0-9]* | head -n 1)
        LATEST_BRANCH_TAG=$(git for-each-ref --sort=-version:refname --format '%(refname:short)' refs/tags/v[0-9]*.[0-9]*.[0-9]*-*.[0-9]* | head -n 1)
        echo "latest_main_tag=${LATEST_MAIN_TAG}" >> $GITHUB_OUTPUT
        echo "latest_branch_tag=${LATEST_BRANCH_TAG}" >> $GITHUB_OUTPUT

    - name: Calculate new version
      id: versioning
      uses: nsmolianitski/semver-versioning-action@v0.0.8
      with:
        latest_main_version: ${{ steps.get_tag.outputs.latest_main_tag }}
        latest_branch_version: ${{ steps.get_tag.outputs.latest_branch_tag }}
        version_strategy: ${{ steps.detect_strategy.outputs.strategy }}
        branch_name: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.ref || github.ref_name }}

    - name: Create new tag
      if: ${{ inputs.skip_push != 'true' }}
      shell: bash
      run: |
        set -e
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"

        echo "Creating tags with version: ${{ steps.versioning.outputs.new_version }}"
        git tag latest -f

        major_version=$(echo "${{ steps.versioning.outputs.new_version }}" | cut -d'.' -f1)
        echo "Creating major version tag: ${major_version}"
        git tag ${major_version} -f

        minor_version=$(echo "${{ steps.versioning.outputs.new_version }}" | cut -d'.' -f1-2)
        echo "Creating minor version tag: ${minor_version}"
        git tag ${minor_version} -f

        echo "Creating full version tag: ${{ steps.versioning.outputs.new_version }}"
        git tag ${{ steps.versioning.outputs.new_version }}
        git push origin --force --tags
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
